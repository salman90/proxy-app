const db  = require("../models");
const MalwareURL = db.DevDB.malware;
const Op = db.DevDB.Sequelize.Op;

exports.create = (req, res) => {

    const url = {
        address: req.body.address,
    };


    // res.send("hello salman")

    MalwareURL.create(url)
        .then(data => {
            res.send(data);
        })
        .catch(err => {
            res.status(500).send({
                message:
                    err.message || "Some error occurred while creating the Tutorial."
            });
        });

};


exports.findAll = (req, res) => {
    const address = req.query.title;
    let exists = address ? { adress: { [Op.like]: `%${address}%` } } : null;
    MalwareURL.findAll({ where: exists})
        .then(data => {
            res.send(data);
        })
        .catch(err => {
            res.status(500).send({
                message:
                    err.message || "Some error occurred while retrieving tutorials."
            });
        });

};


exports.findURL = (req, res, next) => {
    let hostname = req.params.hostname;
    if (hostname.includes(":")) {
        let hostAndPortArray = hostname.split(':');
        hostname = hostAndPortArray[0];
        port = hostAndPortArray[1];
    }

    MalwareURL.findOne({ where: { address: hostname} })
     .then(data => {
         let port = '';
         let url = req.originalUrl.replace('/urlinfo/1/', '');
         let path = req.params[0] ? req.params[0] : '';
         let queryString = (req.query && Object.keys(req.query).length > 0) ? req.query : '';
         let host = req.get('host');
         let resObject = {};         

         if(data != null){
             resObject = {
                 message: 'URL is not safe to visit',
                 hostname: hostname,
                 port: port,
                 path: path,
                 url: url,
                 queryString: {
                     ...queryString
                 },
                //  serverHost: host,
             };
         }else {
             resObject = {
                 message: 'URL is safe to be visit',
                 hostname: hostname,
                 port: port,
                 path: path,
                 url: url,
                 queryString: {
                     ...queryString
                 },
                //  serverHost: host,
             };
         }
         res.json(resObject);
     }).catch(err => {
         next(err)
     })

}